package com.orienteering.handrail.interactors

import com.orienteering.handrail.httprequests.CustomCallback
import com.orienteering.handrail.httprequests.IOnFinishedListener
import com.orienteering.handrail.models.Participant
import com.orienteering.handrail.models.PerformanceUploadRequest
import com.orienteering.handrail.services.PcpService
import com.orienteering.handrail.services.ServiceFactory

/**
 * Model/Control request ParticipantControlPerformance and handle response
 *
 */
class PCPInteractor {

    /**
     * Pcp service generated by service factory for http calls
     */
    var pcpService : PcpService

    /**
     * Initialise pcp service
     */
    init {
        pcpService = ServiceFactory.makeService(PcpService::class.java)
    }

    /**
     * Function to call service method to upload pcps
     *
     * @param eventId
     * @param userId
     * @param request
     * @param onFinishedListener
     */
    fun create(eventId : Int, userId: Long, request : PerformanceUploadRequest, onFinishedListener: IOnFinishedListener<Participant>){
        val call = pcpService.create(eventId,userId,request)
        val customCallback =
            CustomCallback(
                onFinishedListener
            )
        call.enqueue(customCallback)
    }

}