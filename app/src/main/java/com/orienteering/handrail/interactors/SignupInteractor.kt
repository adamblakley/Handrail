package com.orienteering.handrail.interactors

import com.orienteering.handrail.CustomCallback
import com.orienteering.handrail.IOnFinishedListener
import com.orienteering.handrail.httprequests.SignupRequest
import com.orienteering.handrail.services.ServiceFactory
import com.orienteering.handrail.services.SignupService

/**
 * Model/Control request Signup and handle response
 *
 */
class SignupInteractor {

    /**
     * Signup service generated by service factory for http calls
     */
    var signupService : SignupService

    /**
     * Initialise Signup service
     */
    init{
        signupService = ServiceFactory.makeService(SignupService::class.java)
    }

    /**
     * Function to call service method to upload signuprequest
     *
     * @param signupRequest
     * @param onFinishedListener
     */
    fun signup(signupRequest: SignupRequest, onFinishedListener: IOnFinishedListener<Boolean>){
        val call = signupService.signup(signupRequest)
        val customCallback = CustomCallback(onFinishedListener)
        call.enqueue(customCallback)
    }

}